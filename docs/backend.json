{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the HVAC AI Pro application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "companyName": {
          "type": "string",
          "description": "Name of the company the user belongs to."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "companyName",
        "createdAt",
        "updatedAt"
      ]
    },
    "CompanyFinancialSetting": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CompanyFinancialSetting",
      "type": "object",
      "description": "Represents the financial settings for a company.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the financial settings.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:1 CompanyFinancialSetting)"
        },
        "currency": {
          "type": "string",
          "description": "The currency used by the company."
        },
        "taxRate": {
          "type": "number",
          "description": "The tax rate applied to the company's transactions."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the financial settings were created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the financial settings were last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "currency",
        "taxRate",
        "createdAt",
        "updatedAt"
      ]
    },
    "Material": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Material",
      "type": "object",
      "description": "Represents a material used in HVAC projects.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the material.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Material)"
        },
        "name": {
          "type": "string",
          "description": "Name of the material."
        },
        "cost": {
          "type": "number",
          "description": "Cost of the material."
        },
        "unit": {
          "type": "string",
          "description": "Unit of measurement for the material (e.g., feet, inches)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the material was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the material was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "cost",
        "unit",
        "createdAt",
        "updatedAt"
      ]
    },
    "Equipment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Equipment",
      "type": "object",
      "description": "Represents a piece of equipment used in HVAC projects.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the equipment.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Equipment)"
        },
        "name": {
          "type": "string",
          "description": "Name of the equipment."
        },
        "cost": {
          "type": "number",
          "description": "Cost of the equipment."
        },
        "modelNumber": {
          "type": "string",
          "description": "Model number of the equipment."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the equipment was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the equipment was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "cost",
        "modelNumber",
        "createdAt",
        "updatedAt"
      ]
    },
    "Customer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Customer",
      "type": "object",
      "description": "Represents a customer of the HVAC business.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the customer.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Customer)"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the customer."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the customer."
        },
        "email": {
          "type": "string",
          "description": "Email address of the customer.",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the customer."
        },
        "address": {
          "type": "string",
          "description": "Address of the customer."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the customer was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the customer was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "firstName",
        "lastName",
        "email",
        "phoneNumber",
        "address",
        "createdAt",
        "updatedAt"
      ]
    },
    "Proposal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Proposal",
      "type": "object",
      "description": "Represents a proposal generated for a customer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the proposal.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Proposal)"
        },
        "customerId": {
          "type": "string",
          "description": "Reference to Customer. (Relationship: Customer 1:N Proposal)"
        },
        "name": {
          "type": "string",
          "description": "Name of the proposal."
        },
        "gbbOptions": {
          "type": "string",
          "description": "AI-generated Good-Better-Best options for the proposal."
        },
        "status": {
          "type": "string",
          "description": "Status of the proposal (e.g., Draft, Sent, Accepted, Rejected)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the proposal was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the proposal was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "customerId",
        "name",
        "gbbOptions",
        "status",
        "createdAt",
        "updatedAt"
      ]
    },
    "LineItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LineItem",
      "type": "object",
      "description": "Represents a line item in a proposal.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the line item.",
          "format": "uuid"
        },
        "proposalId": {
          "type": "string",
          "description": "Reference to Proposal. (Relationship: Proposal 1:N LineItem)"
        },
        "description": {
          "type": "string",
          "description": "Description of the line item."
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the item."
        },
        "unitPrice": {
          "type": "number",
          "description": "Unit price of the item."
        },
        "materialId": {
          "type": "string",
          "description": "Reference to Material. (Relationship: Material 1:N LineItem)"
        },
        "equipmentId": {
          "type": "string",
          "description": "Reference to Equipment. (Relationship: Equipment 1:N LineItem)"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the line item was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the line item was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "proposalId",
        "description",
        "quantity",
        "unitPrice",
        "createdAt",
        "updatedAt"
      ]
    },
    "Subscription": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subscription",
      "type": "object",
      "description": "Represents a user's subscription status.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the subscription.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:1 Subscription)"
        },
        "stripeSubscriptionId": {
          "type": "string",
          "description": "Stripe subscription ID."
        },
        "status": {
          "type": "string",
          "description": "Status of the subscription (e.g., active, trialing, canceled)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the subscription was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the subscription was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "stripeSubscriptionId",
        "status",
        "createdAt",
        "updatedAt"
      ]
    },
    "JobCostingData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "JobCostingData",
      "type": "object",
      "description": "Represents the job costing information for a specific job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the job costing data.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N JobCostingData)"
        },
        "directCosts": {
          "type": "number",
          "description": "Direct costs associated with the job."
        },
        "indirectCosts": {
          "type": "number",
          "description": "Indirect costs associated with the job."
        },
        "fixedOverhead": {
          "type": "number",
          "description": "Fixed overhead costs associated with the job."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the job costing data was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the job costing data was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "directCosts",
        "indirectCosts",
        "fixedOverhead",
        "createdAt",
        "updatedAt"
      ]
    },
    "CompetitorPrice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CompetitorPrice",
      "type": "object",
      "description": "Represents a competitor's pricing data for a specific service or product.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the competitor price data.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N CompetitorPrice)"
        },
        "competitorName": {
          "type": "string",
          "description": "Name of the competitor."
        },
        "serviceDescription": {
          "type": "string",
          "description": "Description of the service or product being offered."
        },
        "price": {
          "type": "number",
          "description": "Price offered by the competitor."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the competitor price data was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the competitor price data was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "competitorName",
        "serviceDescription",
        "price",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/companyFinancialSettings/{companyFinancialSettingId}",
        "definition": {
          "entityName": "CompanyFinancialSetting",
          "schema": {
            "$ref": "#/backend/entities/CompanyFinancialSetting"
          },
          "description": "Stores financial settings for each company. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "companyFinancialSettingId",
              "description": "The unique identifier of the company financial settings."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/materials/{materialId}",
        "definition": {
          "entityName": "Material",
          "schema": {
            "$ref": "#/backend/entities/Material"
          },
          "description": "Stores materials for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "materialId",
              "description": "The unique identifier of the material."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/equipment/{equipmentId}",
        "definition": {
          "entityName": "Equipment",
          "schema": {
            "$ref": "#/backend/entities/Equipment"
          },
          "description": "Stores equipment for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "equipmentId",
              "description": "The unique identifier of the equipment."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/customers/{customerId}",
        "definition": {
          "entityName": "Customer",
          "schema": {
            "$ref": "#/backend/entities/Customer"
          },
          "description": "Stores customers for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "customerId",
              "description": "The unique identifier of the customer."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/proposals/{proposalId}",
        "definition": {
          "entityName": "Proposal",
          "schema": {
            "$ref": "#/backend/entities/Proposal"
          },
          "description": "Stores proposals for each user. Includes denormalized 'members' map for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "proposalId",
              "description": "The unique identifier of the proposal."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/proposals/{proposalId}/lineItems/{lineItemId}",
        "definition": {
          "entityName": "LineItem",
          "schema": {
            "$ref": "#/backend/entities/LineItem"
          },
          "description": "Stores line items for each proposal. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "proposalId",
              "description": "The unique identifier of the proposal."
            },
            {
              "name": "lineItemId",
              "description": "The unique identifier of the line item."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/subscriptions/{subscriptionId}",
        "definition": {
          "entityName": "Subscription",
          "schema": {
            "$ref": "#/backend/entities/Subscription"
          },
          "description": "Stores subscription information for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "subscriptionId",
              "description": "The unique identifier of the subscription."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobCostingData/{jobCostingDataId}",
        "definition": {
          "entityName": "JobCostingData",
          "schema": {
            "$ref": "#/backend/entities/JobCostingData"
          },
          "description": "Stores job costing data for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "jobCostingDataId",
              "description": "The unique identifier of the job costing data."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/competitorPrices/{competitorPriceId}",
        "definition": {
          "entityName": "CompetitorPrice",
          "schema": {
            "$ref": "#/backend/entities/CompetitorPrice"
          },
          "description": "Stores competitor price data for each user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "competitorPriceId",
              "description": "The unique identifier of the competitor price."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "AdminRole",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Collection to store UIDs of admin users. Existence of a document grants admin access.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the admin user."
            }
          ]
        }
      },
      {
        "path": "/analytics/{dataType}/{docId}",
        "definition": {
          "entityName": "AnalyticsData",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Collection to store analytics data.  Data type could be 'proposal_views', 'acceptance_rates', etc.",
          "params": [
            {
              "name": "dataType",
              "description": "The type of analytics data."
            },
            {
              "name": "docId",
              "description": "The unique identifier of the analytics document."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability, adhering to the specified principles. It leverages path-based ownership for user-specific data and denormalization for collaborative data. User data and related entities are stored under the `/users/{userId}` path, ensuring only the authenticated user can access their data. This structure supports secure list operations (QAPs) because each collection's security rules can be independently defined based on path and document content, without relying on filtering.  The structure uses denormalization strategy for team access to proposals. The `proposals` collection includes a denormalized `members` map, copying user roles from the `/users/{userId}/roles/{roleId}` document (if applicable) to allow authorization without `get()` calls. This ensures atomic operations and simplifies security rule evaluation.  Separate collections are used for admin and analysis roles. The mere presence of a document in `/roles_admin/{uid}` grants administrative privileges.  For efficient analysis, a separate collection `/analytics/{dataType}/{docId}` is used for aggregated data."
  }
}